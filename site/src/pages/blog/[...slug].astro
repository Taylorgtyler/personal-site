---
import { type CollectionEntry, getCollection } from "astro:content";
import PageLayout from "../../layouts/PageLayout.astro";
import Container from "../../components/Container.astro";
import FormattedDate from "../../components/FormattedDate.astro";
import BackToPrev from "../../components/BackToPrev.astro";
import Badge from "../../components/Badge.astro"; // Ensure Badge component is imported

export async function getStaticPaths() {
	const posts = (await getCollection("blog"))
		.filter((post) => !post.data.draft)
		.sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());
	return posts.map((post) => ({
		params: { slug: post.slug },
		props: post,
	}));
}
type Props = CollectionEntry<"blog">;

const post = Astro.props;
const { Content } = await post.render();
---

<PageLayout title={post.data.title} description={post.data.description}>
	<Container>
		<div class="animate mb-4">
			<BackToPrev href="/blog"> Back to blog </BackToPrev>
		</div>
		<div class="space-y-4 my-12">
			<div class="animate flex items-center gap-2 text-accent-green">
				<FormattedDate date={post.data.date} />
			</div>
			<h1 class="animate text-3xl font-bold text-white">
				{post.data.title}
			</h1>
			{
				post.data.tags && post.data.tags.length > 0 && (
					<div class="animate flex gap-2">
						{post.data.tags.map((tag) => (
							<Badge label={tag} />
						))}
					</div>
				)
			}
		</div>
		<article class="animate prose-dark">
			<Content />
		</article>
	</Container>
</PageLayout>
